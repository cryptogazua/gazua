<!DOCTYPE html>
<meta charset="utf-8">
<style>
    body {
        font: 10px sans-serif;
    }

    text {
        fill: #000;
    }

    path.candle {
        stroke: #000000;
    }

    path.candle.body {
        stroke-width: 0;
    }

    path.candle.up {
        fill: #FF0000;
        stroke: #FF0000;
    }

    path.candle.down {
        fill: #0000FF;
        stroke: #0000FF;
    }
</style>
<body>
<h1> <a href="/">Cryptogazua Dashboard </a></h1>
<a href="/BTC">비트코인</a> | 
<a href="/ETH">이더리움</a> | 
<a href="/XRP">리플</a> | 
<a href="/BCH">비트코인 캐시</a> | 
<a href="/EOS">이오스</a> | 
<button>시세 갱신</button>
<table id="mytable">
<tr>
  <td>author</td>
  <td>permlink</td>
  <td>최근갱신</td>
  <td>keyword</td>
  <td>title</td>
</tr>
<tbody></tbody>
</table>
<script src="http://d3js.org/d3.v4.min.js"></script>
<script src="http://techanjs.org/techan.min.js"></script>
<script src="https://code.jquery.com/jquery-1.9.1.js"></script>
<script>
    var margin = {top: 20, right: 20, bottom: 30, left: 80},
            width = 960 - margin.left - margin.right,
            height = 500 - margin.top - margin.bottom;

    var parseDate = d3.timeParse("%Y-%m-%dT%H:%M:%S.%LZ");

    var x = techan.scale.financetime()
            .range([0, width]);

    var y = d3.scaleLinear()
            .range([height, 0]);

    var candlestick = techan.plot.candlestick()
            .xScale(x)
            .yScale(y);

    var xAxis = d3.axisBottom()
            .scale(x);

    var yAxis = d3.axisLeft()
            .scale(y);

    var svg = d3.select("body").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    var quoteURL = "quote/" + "<%= currency %>".toUpperCase();
    d3.json(quoteURL, function(error, data) {
        var accessor = candlestick.accessor();

        data = data.slice(0, 200).map(function(d) {
            return {
                date: parseDate(d.datetime),
                //date: new Date(d.datetime),
                open: +d.open,
                high: +d.high,
                low: +d.low,
                close: +d.close
            };
        }).sort(function(a, b) { return d3.ascending(accessor.d(a), accessor.d(b)); });

        svg.append("g")
                .attr("class", "candlestick");

        svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")");

        svg.append("g")
                .attr("class", "y axis")
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", ".71em")
                .style("text-anchor", "end")
                .text("Price (Won)");

        // Data to display initially
        draw(data.slice(0, data.length-20));

        // Only want this button to be active if the data has loaded
        d3.select("button").on("click", function() { draw(data); }).style("display", "inline");
    });


    function draw(data) {
        x.domain(data.map(candlestick.accessor().d));
        y.domain(techan.scale.plot.ohlc(data, candlestick.accessor()).domain());

        svg.selectAll("g.candlestick").datum(data).call(candlestick);
        svg.selectAll("g.x.axis").call(xAxis);
        svg.selectAll("g.y.axis").call(yAxis);
    }

    var articleURL = "./article/" + "<%= currency %>".toLowerCase();
    $.get(articleURL).success(function(res){
        for(var i=0;i<res.length;i++){
            $('#mytable > tbody:last').append('<tr><td>' + res[i].author + '</td><td>' + res[i].permlink+'</td><td>' + res[i].LAST_UPDATE + '</td><td>'+res[i].keyword+ '</td><td>'+ res[i].title +'</td></tr>');
        }
    });
    </script>
    </body>
    </html>
